//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MemphisHospital.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;

    public partial class Patient
    {
        [Required]
        public int PatientID { get; set; }
        [Required(ErrorMessage ="Enter Patient's Name")]
        [Display(Name ="Patient's Name")]
        public string FullName { get; set; }
        [Required]
        [DisplayFormat(DataFormatString = "{0:yyyy-MM-dd}", ApplyFormatInEditMode = true)]
        [CustomValidation(typeof(Patient), nameof(ValidateDate))]
        public System.DateTime DateofBirth { get; set; }
        [Required(ErrorMessage ="Enter Patient's Gender")]
        public string Gender { get; set; }
        [Required(ErrorMessage = "Enter Patient's Address")]
        public string Address { get; set; }
        [Required(ErrorMessage = "Enter Patient's Phone Number")]
        [DisplayFormat(DataFormatString = "{0:(###) ###-####}", ApplyFormatInEditMode = true)]
        public string Phonenumber { get; set; }
        [Required(ErrorMessage = "Enter Patient's Email")]
        [EmailAddress(ErrorMessage ="Invalid Email")]
        public string Email { get; set; }
        [Required]
        [DataType(DataType.Date)]
        [DisplayFormat(DataFormatString = "{0:yyyy-MM-dd}", ApplyFormatInEditMode = true)]
        [CustomValidation(typeof(Patient), nameof(ValidateDate))]
        public System.DateTime DateofRegistration { get; set; }

        public static ValidationResult ValidateDate(DateTime date, ValidationContext context)
        {
            if(date > DateTime.Now)
            {
                return new ValidationResult("Date can not be in the future");
            }
            return ValidationResult.Success;
        }
    }
}
